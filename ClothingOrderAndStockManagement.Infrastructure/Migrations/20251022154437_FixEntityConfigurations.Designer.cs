// <auto-generated />
using System;
using ClothingOrderAndStockManagement.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClothingOrderAndStockManagement.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251022154437_FixEntityConfigurations")]
    partial class FixEntityConfigurations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Customers.CustomerInfo", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerInfo", (string)null);
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderPackage", b =>
                {
                    b.Property<int>("OrderPackagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderPackagesId"));

                    b.Property<int>("OrderRecordsId")
                        .HasColumnType("int");

                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceAtPurchase")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderPackagesId")
                        .HasName("PK__OrderPac__2010BE6808487A3F");

                    b.HasIndex("OrderRecordsId");

                    b.HasIndex("PackagesId");

                    b.ToTable("OrderPackages");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderRecord", b =>
                {
                    b.Property<int>("OrderRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderRecordsId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDatetime")
                        .HasColumnType("datetime");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PaymentRecordsId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("OrderRecordsId")
                        .HasName("PK__OrderRec__344164E7BC4CF5E5");

                    b.ToTable("OrderRecords");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.PaymentRecord", b =>
                {
                    b.Property<int>("PaymentRecordsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentRecordsId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderRecordsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProofUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ProofUrl2")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("PaymentRecordsId")
                        .HasName("PK__PaymentR__A4C5C698D3DD885B");

                    b.HasIndex("OrderRecordsId");

                    b.ToTable("PaymentRecords");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.ReturnLog", b =>
                {
                    b.Property<int>("ReturnLogsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReturnLogsId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("OrderPackagesId")
                        .HasColumnType("int");

                    b.Property<int>("OrderRecordsId")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("ReturnDate")
                        .HasColumnType("date");

                    b.Property<string>("ReturnStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ReturnLogsId")
                        .HasName("PK__ReturnLo__5879FDA276DE7257");

                    b.HasIndex("CustomerId");

                    b.HasIndex("OrderPackagesId");

                    b.HasIndex("OrderRecordsId");

                    b.HasIndex("UserId");

                    b.ToTable("ReturnLogs");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.InventoryLog", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("ChangeType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("LogDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("LogTime")
                        .HasColumnType("time");

                    b.Property<int?>("PackageItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantityChanged")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LogId")
                        .HasName("PK__Inventor__5E548648A8955A45");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackageItemId");

                    b.ToTable("InventoryLogs");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ItemCategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemId")
                        .HasName("PK__Item__727E838B64E748E7");

                    b.HasIndex("ItemCategoryId");

                    b.ToTable("Item", (string)null);
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.ItemCategory", b =>
                {
                    b.Property<int>("ItemCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemCategoryId"));

                    b.Property<string>("ItemCategoryType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ItemCategoryId")
                        .HasName("PK__ItemCate__C24A29255FC49F7D");

                    b.ToTable("ItemCategory", (string)null);
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.Package", b =>
                {
                    b.Property<int>("PackagesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackagesId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PackagesId")
                        .HasName("PK__Packages__BAFF4A30CFB5A712");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.PackageItem", b =>
                {
                    b.Property<int>("PackageItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageItemId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ItemQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PackagesId")
                        .HasColumnType("int");

                    b.HasKey("PackageItemId")
                        .HasName("PK__PackageI__D45F71B12F5A8970");

                    b.HasIndex("ItemId");

                    b.HasIndex("PackagesId");

                    b.ToTable("PackageItem", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderPackage", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderRecord", "OrderRecords")
                        .WithMany("OrderPackages")
                        .HasForeignKey("OrderRecordsId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderPackages_OrderRecords");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.Package", "Packages")
                        .WithMany("OrderPackages")
                        .HasForeignKey("PackagesId")
                        .IsRequired()
                        .HasConstraintName("FK_OrderPackages_Packages");

                    b.Navigation("OrderRecords");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.PaymentRecord", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderRecord", "OrderRecords")
                        .WithMany("PaymentRecords")
                        .HasForeignKey("OrderRecordsId")
                        .IsRequired()
                        .HasConstraintName("FK_PaymentRecords_Order");

                    b.Navigation("OrderRecords");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.ReturnLog", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Customers.CustomerInfo", "CustomerInfo")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_ReturnLogs_Customer");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderPackage", "OrderPackage")
                        .WithMany()
                        .HasForeignKey("OrderPackagesId")
                        .IsRequired()
                        .HasConstraintName("FK_ReturnLogs_OrderPackage");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderRecord", "OrderRecords")
                        .WithMany("ReturnLogs")
                        .HasForeignKey("OrderRecordsId")
                        .IsRequired()
                        .HasConstraintName("FK_ReturnLogs_Order");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK_ReturnLogs_User");

                    b.Navigation("CustomerInfo");

                    b.Navigation("OrderPackage");

                    b.Navigation("OrderRecords");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.InventoryLog", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.Item", "Item")
                        .WithMany("InventoryLogs")
                        .HasForeignKey("ItemId")
                        .HasConstraintName("FK_InventoryLogs_Item");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.PackageItem", "PackageItem")
                        .WithMany("InventoryLogs")
                        .HasForeignKey("PackageItemId")
                        .HasConstraintName("FK_InventoryLogs_PackageItem");

                    b.Navigation("Item");

                    b.Navigation("PackageItem");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.Item", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.ItemCategory", "ItemCategory")
                        .WithMany("Items")
                        .HasForeignKey("ItemCategoryId")
                        .IsRequired()
                        .HasConstraintName("FK_Item_ItemCategory");

                    b.Navigation("ItemCategory");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.PackageItem", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.Item", "Item")
                        .WithMany("PackageItems")
                        .HasForeignKey("ItemId")
                        .IsRequired()
                        .HasConstraintName("FK_PackageItem_Item");

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Products.Package", "Packages")
                        .WithMany("PackageItems")
                        .HasForeignKey("PackagesId")
                        .IsRequired()
                        .HasConstraintName("FK_PackageItem_Packages");

                    b.Navigation("Item");

                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ClothingOrderAndStockManagement.Domain.Entities.Account.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Orders.OrderRecord", b =>
                {
                    b.Navigation("OrderPackages");

                    b.Navigation("PaymentRecords");

                    b.Navigation("ReturnLogs");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.Item", b =>
                {
                    b.Navigation("InventoryLogs");

                    b.Navigation("PackageItems");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.ItemCategory", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.Package", b =>
                {
                    b.Navigation("OrderPackages");

                    b.Navigation("PackageItems");
                });

            modelBuilder.Entity("ClothingOrderAndStockManagement.Domain.Entities.Products.PackageItem", b =>
                {
                    b.Navigation("InventoryLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
