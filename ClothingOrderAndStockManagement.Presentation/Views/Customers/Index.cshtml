@model ClothingOrderAndStockManagement.Application.Helpers.PaginatedList<CustomerDto>
@using ClothingOrderAndStockManagement.Application.Dtos

@using ClothingOrderAndStockManagement.Application.Dtos.Customers
@{
    ViewData["Title"] = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="customer-header">
    <h2>Customers</h2>
</div>

<div class="customer-search-add-section">
    <!-- Search Button -->
    <form asp-controller="Customers" asp-action="Index" method="get" class="customer-search-form" autocomplete="off">
        <div class="input-group">
            <input type="text" name="searchString" class="form-control" placeholder="Search customers..." value="@Context.Request.Query["searchString"]" />
            <button type="submit" class="btn btn-primary d-flex align-items-center">
                <img src="~/images/icons/Search.png" alt="Search" class="search-icon-img" />
             </button>
        </div>
    </form>

    <!-- Add Customer Button -->
    <button class="btn btn-outline-primary customer-add-btn"
            data-bs-toggle="modal" data-bs-target="#addCustomerModal">
        <img src="~/images/icons/Add.png" alt="Add" class="add-icon-img" />
        Add Customer
    </button>

	<!-- Add Customer Modal -->
    @await Html.PartialAsync("Partials/_AddCustomerModal", new CustomerDto())
    @if (ViewData["ShowAddCustomerModal"] is bool showAddCustomerModal && showAddCustomerModal)
    {
        var addCustomerModel = ViewData["AddCustomerModel"] as CustomerDto;
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var modalEl = document.getElementById('addCustomerModal');
                var modal = new bootstrap.Modal(modalEl);
                modal.show();
            });
        </script>
    }
</div>

<div class="reports-section">       
    @if (Model != null && Model.Any())
    {
        <!-- Column Names -->
        <div class="table-responsive">
            <table class="table table-hover customer-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Address</th>
                        <th>Phone Number</th>
                        <th>Zip Code</th>
                        <th class="customer-actions">Actions</th>
                    </tr>
                </thead>

                <!-- Row Data -->
                <tbody>
                    @foreach (var customer in Model)
                    {
                        <tr>
                            <td>
                                <span class="customer-id">@customer.CustomerId</span>
                            </td>
                            <td>
                                <span class="customer-name">@customer.CustomerName</span>
                            </td>
                            <td class="customer-details">@customer.Address</td>
                            <td class="customer-details">@customer.ContactNumber</td>
                            <td class="customer-details">@customer.ZipCode</td>
                            <td class="customer-actions">
                                <div class="btn-group" role="group">
                                    <a class="btn btn-sm btn-outline-success customer-edit-btn"
                                        data-bs-toggle="modal" data-bs-target="#editCustomerModal-@customer.CustomerId">
                                        Edit
                                    </a>
                                    <!-- Edit Customer Modal -->
                                    @await Html.PartialAsync("Partials/_EditCustomerModal", customer)

                                    <button class="btn btn-sm btn-outline-danger customer-delete-btn"
                                            data-bs-toggle="modal"
                                            data-bs-target="#deleteModal-@customer.CustomerId">
                                        Delete
                                    </button>
                                    <!-- Delete Customer Modal -->
                                    @await Html.PartialAsync("_DeleteModal",
                                    ("Customer", "Delete", customer.CustomerId, customer.CustomerName))
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="no-customers-section">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2" />
                <circle cx="12" cy="7" r="4" />
            </svg>
            <h5>No customers found</h5>
            <p>Start by adding your first customer using the "Add Customer" button above.</p>
        </div>
    }

    <!-- Pagination -->
    <div class="pagination-section">
        <div>
            Page @Model!.PageIndex of @Model!.TotalPages
        </div>

        <div>
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index"
                   asp-route-pageIndex="@(Model.PageIndex - 1)"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-secondary">Previous</a>
            }

            @if (Model.HasNextPage)
            {
                <a asp-action="Index"
                   asp-route-pageIndex="@(Model.PageIndex + 1)"
                   asp-route-searchString="@ViewData["CurrentFilter"]"
                   class="btn btn-outline-primary">Next</a>
            }
        </div>
    </div>
</div>