@model IEnumerable<ClothingOrderAndStockManagement.Application.Dtos.Orders.OrderRecordDto>

@{
    ViewData["Title"] = "Orders";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h3>Orders</h3>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#createOrderModal">
            <i class="bi bi-plus-circle"></i> Create Order
        </button>
    </div>

    <table class="table table-hover table-bordered align-middle">
        <thead class="table-light">
            <tr>
                <th>Customer</th>
                <th>Date & Time</th>
                <th>Status</th>
                <th>User</th>
                <th>Packages</th>
                <th>Payments</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@order.CustomerName</td>
                <td>@order.OrderDatetime.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@order.OrderStatus</td>
                <td>@order.UserId</td>
                <td>
                    @if (order.OrderPackages != null && order.OrderPackages.Any())
                    {
                        <ul class="mb-0">
                            @foreach (var pkg in order.OrderPackages)
                            {
                                <li>Package ID: @pkg.PackagesId × @pkg.Quantity (@pkg.PriceAtPurchase.ToString("C"))</li>
                            }
                        </ul>
                    }
                </td>
                <td>
                    @if (order.PaymentRecords != null && order.PaymentRecords.Any())
                    {
                        <ul class="mb-0">
                            @foreach (var pay in order.PaymentRecords)
                            {
                                <li>@pay.Amount.ToString("C") - @pay.PaymentStatus
                                    @if (!string.IsNullOrEmpty(pay.ProofUrl))
                                    {
                                        <a href="@pay.ProofUrl" target="_blank">[Proof]</a>
                                    }
                                </li>
                            }
                        </ul>
                    }
                </td>
                <td>
                    <button class="btn btn-sm btn-warning" data-bs-toggle="modal" data-bs-target="#editOrderModal-@order.OrderRecordsId">
                        <i class="bi bi-pencil-square"></i>
                    </button>
                    <form asp-action="DeleteConfirmed" asp-route-id="@order.OrderRecordsId" method="post" class="d-inline">
                        <button type="submit" class="btn btn-sm btn-danger">
                            <i class="bi bi-trash"></i>
                        </button>
                    </form>
                </td>
            </tr>

            <!-- Include Edit Modal for each order -->
            @await Html.PartialAsync("Partials/_EditOrderModal", new ClothingOrderAndStockManagement.Application.Dtos.Orders.UpdateOrderDto
            {
                OrderRecordsId = order.OrderRecordsId,
                CustomerId = order.CustomerId,
                OrderStatus = order.OrderStatus,
                UserId = order.UserId
            })

        }
        </tbody>
    </table>
</div>

<!-- Include Create Modal -->
@await Html.PartialAsync("Partials/_AddOrderModal", new ClothingOrderAndStockManagement.Application.Dtos.Orders.CreateOrderDto())

