@model ClothingOrderAndStockManagement.Application.Helpers.PaginatedList<ClothingOrderAndStockManagement.Application.Dtos.Orders.OrderRecordDto>
@{
    ViewData["Title"] = "Orders";
    var currentStatus = (string?)ViewData["CurrentStatus"] ?? "";
    var statuses = new[] { "Awaiting Payment", "Partially Paid", "Fully Paid", "Completed", "Returned", "Cancelled" };
}

<div class="orders-header">
    <h2>Orders</h2>
</div>

<!-- Filter + Actions -->
<div class="orders-filter-section d-flex justify-content-between align-items-center mb-3">
    <form asp-controller="Orders" asp-action="Index" method="get" class="d-flex gap-2">
        <select name="status" class="form-select" style="max-width: 220px;">
            <option value="">All statuses</option>
            @foreach (var s in statuses)
            {
                <option value="@s" selected="@(currentStatus == s ? "selected" : null)">@s</option>
            }
        </select>
        <button type="submit" class="btn btn-primary">Filter</button>
    </form>
</div>

<div class="reports-section">
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-hover customer-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Date</th>
                        <th>Packages</th>
                        <th>Total Amount</th>
                        <th>Amount Paid</th>
                        <th>Balance</th>
                        <th class="customer-actions">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td><span class="customer-id">#@order.OrderRecordsId</span></td>
                            <td><span class="customer-name">@order.CustomerName</span></td>
                            <td class="customer-details">
                                @order.OrderDatetime.ToString("MMM dd, yyyy")
                                <br />
                                <small>@order.OrderDatetime.ToString("hh:mm tt")</small>
                                <br />
                                <span class="badge @GetStatusBadgeClass(order.OrderStatus)">@order.OrderStatus</span>
                            </td>
                            <td class="customer-details">
                                @if (order.OrderPackages.Any())
                                {
                                    <ul class="mb-0 ps-3">
                                        @foreach (var pkg in order.OrderPackages)
                                        {
                                            <li>@pkg.PackageName × @pkg.Quantity</li>
                                        }
                                    </ul>
                                }
                            </td>
                            <td class="customer-details">₱@order.TotalAmount.ToString("N2")</td>
                            <td class="customer-details text-success">₱@order.TotalPaid.ToString("N2")</td>
                            <td class="customer-details @(order.RemainingBalance > 0 ? "text-danger" : "text-success")">
                                ₱@order.RemainingBalance.ToString("N2")
                            </td>
                            <td class="customer-actions">
                                <div class="btn-group" role="group">
                                    <!-- Manage Payments Button -->
                                    @if (order.OrderStatus != "Cancelled")
                                    {
                                        <button class="btn btn-sm btn-payment"
                                                data-bs-toggle="modal"
                                                data-bs-target="#managePaymentModal-@order.OrderRecordsId">
                                            Payments
                                        </button>
                                    }

                                    <!-- Cancel Button -->
                                    @if (order.OrderStatus != "Cancelled")
                                    {
                                        <button class="btn btn-sm btn-cancel"
                                                data-bs-toggle="modal"
                                                data-bs-target="#cancelOrderModal-@order.OrderRecordsId">
                                            Cancel
                                        </button>
                                    }
                                    else
                                    {
                                        <span class="btn btn-sm btn-secondary disabled">Cancelled</span>
                                    }

                                    @* Modals *@
                                    @if (order.OrderStatus != "Cancelled")
                                    {
                                        @await Html.PartialAsync("Partials/_ManagePaymentModal", order)
                                        @await Html.PartialAsync("Partials/_CancelOrderModal", order)
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="no-customers-section">
            <svg width="48" height="48" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"/>
                <line x1="3" y1="6" x2="21" y2="6"/>
                <path d="M16 10a4 4 0 0 1-8 0"/>
            </svg>
            <h5>No orders found</h5>
            <p>Orders will appear here once created.</p>
        </div>
    }

    <!-- Pagination -->
    <div class="pagination-section">
        <div>
            Page @Model!.PageIndex of @Model!.TotalPages
        </div>

        <div>
            @if (Model.HasPreviousPage)
            {
                <a asp-action="Index"
                   asp-route-pageIndex="@(Model.PageIndex - 1)"
                   asp-route-status="@currentStatus"
                   class="btn btn-outline-secondary">Previous</a>
            }

            @if (Model.HasNextPage)
            {
                <a asp-action="Index"
                   asp-route-pageIndex="@(Model.PageIndex + 1)"
                   asp-route-status="@currentStatus"
                   class="btn btn-outline-primary">Next</a>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Awaiting Payment" => "bg-danger",
            "Partially Paid" => "bg-warning",
            "Fully Paid" => "bg-info",
            "Completed" => "bg-success",
            "Returned" => "bg-secondary",
            "Cancelled" => "bg-dark",
            _ => "bg-secondary"
        };
    }
}
