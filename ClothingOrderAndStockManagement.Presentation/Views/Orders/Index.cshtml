@model IEnumerable<ClothingOrderAndStockManagement.Application.Dtos.Orders.OrderRecordDto>
@{
    ViewData["Title"] = "Orders";
}

<div class="orders-header">
    <h2>
        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="32" height="32">
            <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"/>
            <line x1="3" y1="6" x2="21" y2="6"/>
            <path d="M16 10a4 4 0 0 1-8 0"/>
        </svg>
        Orders Management
    </h2>
    @if (Model != null && Model.Any())
    {
        <div class="orders-stats">
            <div class="stat-item">
                <div class="stat-number">@Model.Count()</div>
                <div>Total Orders</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">@Model.Count(o => o.OrderStatus == "Awaiting Payment")</div>
                <div>Pending</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">@Model.Count(o => o.OrderStatus == "Partially Paid")</div>
                <div>Partial</div>
            </div>
            <div class="stat-item">
                <div class="stat-number">@Model.Count(o => o.OrderStatus == "Fully Paid")</div>
                <div>Paid</div>
            </div>
        </div>
    }
</div>

<div class="orders-container">
    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table orders-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Customer</th>
                        <th>Date</th>
                        <th>Packages</th>
                        <th>Total Amount</th>
                        <th>Amount Paid</th>
                        <th>Balance</th>
                        <th>Status</th>
                        <th style="text-align: center;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td><span class="order-id">#@order.OrderRecordsId</span></td>
                            <td><span class="customer-name">@order.CustomerName</span></td>
                            <td class="order-details">
                                @order.OrderDatetime.ToString("MMM dd, yyyy")
                                <br/>
                                <small>@order.OrderDatetime.ToString("hh:mm tt")</small>
                            </td>
                            <td class="order-details">
                                @if (order.OrderPackages.Any())
                                {
                                    <ul class="package-list">
                                        @foreach (var pkg in order.OrderPackages)
                                        {
                                            <li>@pkg.PackageName × @pkg.Quantity</li>
                                        }
                                    </ul>
                                }
                            </td>
                            <td><span class="amount amount-total">₱@order.TotalAmount.ToString("N2")</span></td>
                            <td><span class="amount amount-paid">₱@order.TotalPaid.ToString("N2")</span></td>
                            <td>
                                <span class="amount @(order.RemainingBalance > 0 ? "amount-balance" : "amount-balance paid-full")">
                                    ₱@order.RemainingBalance.ToString("N2")
                                </span>
                            </td>
                            <td>
                                <span class="status-badge @GetStatusClass(order.OrderStatus)">
                                    @order.OrderStatus
                                </span>
                            </td>
                            <td>
                                <div class="action-buttons">
                                    <button class="action-btn btn-payment" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#managePaymentModal-@order.OrderRecordsId"
                                            title="Manage Payments">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <rect x="1" y="4" width="22" height="16" rx="2" ry="2"/>
                                            <line x1="1" y1="10" x2="23" y2="10"/>
                                        </svg>
                                        Manage Payments
                                    </button>
                                    
                                    <button class="action-btn btn-edit-status" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#editStatusModal-@order.OrderRecordsId"
                                            title="Update Status">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"/>
                                            <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"/>
                                        </svg>
                                        Status
                                    </button>
                                    
                                    <button class="action-btn btn-delete" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#deleteOrderModal-@order.OrderRecordsId"
                                            title="Delete Order">
                                        <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                            <polyline points="3 6 5 6 21 6"/>
                                            <path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"/>
                                        </svg>
                                        Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                        
                        <!-- Modals (These stay hidden until opened) -->
                        @await Html.PartialAsync("Partials/_ManagePaymentModal", order)
                        @await Html.PartialAsync("Partials/_EditOrderStatusModal", order)
                        @await Html.PartialAsync("_DeleteModal", ("Order", "Delete", order.OrderRecordsId, $"Order #{order.OrderRecordsId} for {order.CustomerName}"))
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="no-orders-section">
            <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"/>
                <line x1="3" y1="6" x2="21" y2="6"/>
                <path d="M16 10a4 4 0 0 1-8 0"/>
            </svg>
            <h5>No orders found</h5>
            <p>Orders will appear here once customers place orders.</p>
            <a href="@Url.Action("Index", "Customers")" class="btn btn-primary">
                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" width="16" height="16">
                    <path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"/>
                    <circle cx="12" cy="7" r="4"/>
                </svg>
                Browse Customers
            </a>
        </div>
    }
</div>

@functions {
    string GetStatusClass(string status)
    {
        return status switch
        {
            "Awaiting Payment" => "status-pending",
            "Partially Paid" => "status-partial",
            "Fully Paid" => "status-paid",
            "Completed" => "status-completed",
            "Returned" => "status-returned",
            _ => "status-pending"
        };
    }
}
