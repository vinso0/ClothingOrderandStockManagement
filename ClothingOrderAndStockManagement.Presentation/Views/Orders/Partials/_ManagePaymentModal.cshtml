@model ClothingOrderAndStockManagement.Application.Dtos.Orders.OrderRecordDto

<style>
    .payment-modal .modal-dialog {
        max-width: 900px;
    }

    .payment-modal .modal-content {
        border: none;
        border-radius: 12px;
    }

    .payment-modal .modal-header {
        background: linear-gradient(135deg, #17a2b8 0%, #138496 100%);
        color: white;
        padding: 1.5rem;
        border: none;
    }

    .payment-summary-card {
        background: linear-gradient(135deg, #e8f5f7 0%, #d1ecf1 100%);
        border: 2px solid #17a2b8;
        border-radius: 8px;
        padding: 1.5rem;
        margin-bottom: 1.5rem;
    }

    .summary-row {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem 0;
        align-items: center;
    }

    .summary-label {
        font-weight: 600;
        color: #333;
    }

    .summary-value {
        font-weight: 700;
        font-size: 1.1rem;
    }

    .nav-tabs {
        border-bottom: 2px solid #17a2b8;
        margin-bottom: 1.5rem;
    }

        .nav-tabs .nav-link {
            color: #666;
            font-weight: 600;
            border: none;
            border-bottom: 3px solid transparent;
            padding: 1rem 1.5rem;
        }

            .nav-tabs .nav-link:hover {
                border-color: transparent;
                color: #17a2b8;
            }

            .nav-tabs .nav-link.active {
                color: #17a2b8;
                border-bottom: 3px solid #17a2b8;
                background: transparent;
            }

    .payment-history-table {
        background: white;
        border-radius: 8px;
        overflow: hidden;
    }

        .payment-history-table thead {
            background: #f8f9fa;
        }

        .payment-history-table th {
            font-weight: 600;
            color: #333;
            padding: 1rem;
        }

        .payment-history-table td {
            padding: 1rem;
            vertical-align: middle;
        }

    .payment-badge {
        padding: 0.5rem 0.875rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.85rem;
    }

    .badge-down {
        background: #fff3cd;
        color: #856404;
    }

    .badge-full {
        background: #d4edda;
        color: #155724;
    }

    .proof-link {
        display: inline-flex;
        align-items: center;
        gap: 0.25rem;
        color: #17a2b8;
        text-decoration: none;
        font-size: 0.85rem;
    }

        .proof-link:hover {
            color: #138496;
        }

    .add-payment-form {
        background: #f8f9fa;
        border-radius: 8px;
        padding: 1.5rem;
    }

    .file-upload-box {
        border: 2px dashed #17a2b8;
        border-radius: 8px;
        padding: 1.5rem;
        text-align: center;
        background: white;
        cursor: pointer;
        transition: all 0.3s ease;
    }

        .file-upload-box:hover {
            background: #e8f5f7;
            border-color: #138496;
        }

    .file-upload-icon {
        width: 48px;
        height: 48px;
        color: #17a2b8;
        margin-bottom: 0.5rem;
    }

    .file-name-display {
        color: #28a745;
        font-weight: 600;
        margin-top: 0.5rem;
    }

    .empty-state {
        text-align: center;
        padding: 3rem;
        color: #6c757d;
    }

        .empty-state svg {
            width: 64px;
            height: 64px;
            opacity: 0.3;
            margin-bottom: 1rem;
        }
</style>

<div class="modal fade payment-modal" id="managePaymentModal-@Model.OrderRecordsId" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="vertical-align: middle; margin-right: 0.5rem;">
                        <rect x="1" y="4" width="22" height="16" rx="2" ry="2" />
                        <line x1="1" y1="10" x2="23" y2="10" />
                    </svg>
                    Manage Payments - Order #@Model.OrderRecordsId
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" style="padding: 2rem;">
                <!-- Payment Summary -->
                <div class="payment-summary-card">
                    <div class="summary-row">
                        <div>
                            <div class="summary-label">Customer</div>
                            <div>@Model.CustomerName</div>
                        </div>
                        <div style="text-align: right;">
                            <div class="summary-label">Order Date</div>
                            <div>@Model.OrderDatetime.ToString("MMM dd, yyyy")</div>
                        </div>
                    </div>
                    <hr style="margin: 1rem 0; border-color: rgba(0,0,0,0.1);">
                    <div class="summary-row">
                        <span class="summary-label">Total Amount:</span>
                        <span class="summary-value" style="color: #5a4a3a;">₱@Model.TotalAmount.ToString("N2")</span>
                    </div>
                    <div class="summary-row">
                        <span class="summary-label">Amount Paid:</span>
                        <span class="summary-value" style="color: #28a745;">₱@Model.TotalPaid.ToString("N2")</span>
                    </div>
                    <div class="summary-row" style="border-top: 2px solid rgba(0,0,0,0.1); padding-top: 1rem; margin-top: 0.5rem;">
                        <span class="summary-label" style="font-size: 1.1rem;">Remaining Balance:</span>
                        <span class="summary-value" style="font-size: 1.3rem; color: #dc3545;">₱@Model.RemainingBalance.ToString("N2")</span>
                    </div>
                </div>

                <!-- Tabs -->
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active"
                                id="history-tab-@Model.OrderRecordsId"
                                data-bs-toggle="tab"
                                data-bs-target="#history-@Model.OrderRecordsId"
                                type="button"
                                role="tab">
                            Payment History
                        </button>
                    </li>
                    @if (Model.RemainingBalance > 0)
                    {
                        <li class="nav-item" role="presentation">
                            <button class="nav-link"
                                    id="add-tab-@Model.OrderRecordsId"
                                    data-bs-toggle="tab"
                                    data-bs-target="#add-@Model.OrderRecordsId"
                                    type="button"
                                    role="tab">
                                Add Payment
                            </button>
                        </li>
                    }
                </ul>

                <!-- Tab Content -->
                <div class="tab-content">
                    <!-- Payment History Tab -->
                    <div class="tab-pane fade show active"
                         id="history-@Model.OrderRecordsId"
                         role="tabpanel">
                        @if (Model.PaymentRecords != null && Model.PaymentRecords.Any())
                        {
                            <div class="table-responsive">
                                <table class="table payment-history-table">
                                    <thead>
                                        <tr>
                                            <th>Payment #</th>
                                            <th>Date & Time</th>
                                            <th>Amount</th>
                                            <th>Type</th>
                                            <th>Proof</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var payment in Model.PaymentRecords)
                                        {
                                            <tr>
                                                <td><strong>#@payment.PaymentRecordsId</strong></td>
                                                <td>
                                                    @payment.PaymentDate.ToString("MMM dd, yyyy")
                                                    <br />
                                                    <small style="color: #666;">@payment.PaymentDate.ToString("hh:mm tt")</small>
                                                </td>
                                                <td><strong style="color: #28a745;">₱@payment.Amount.ToString("N2")</strong></td>
                                                <td>
                                                    <span class="payment-badge @(payment.PaymentStatus == "Full Payment" ? "badge-full" : "badge-down")">
                                                        @payment.PaymentStatus
                                                    </span>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(payment.ProofUrl))
                                                    {
                                                        <a href="@payment.ProofUrl" target="_blank" class="proof-link">
                                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                                                <polyline points="14 2 14 8 20 8" />
                                                            </svg>
                                                            Proof 1
                                                        </a>
                                                    }
                                                    @if (!string.IsNullOrEmpty(payment.ProofUrl2))
                                                    {
                                                        <br />
                                                        <a href="@payment.ProofUrl2" target="_blank" class="proof-link">
                                                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                                <path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z" />
                                                                <polyline points="14 2 14 8 20 8" />
                                                            </svg>
                                                            Proof 2
                                                        </a>
                                                    }
                                                    @if (string.IsNullOrEmpty(payment.ProofUrl) && string.IsNullOrEmpty(payment.ProofUrl2))
                                                    {
                                                        <span style="color: #999; font-size: 0.85rem;">No proof</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                        else
                        {
                            <div class="empty-state">
                                <svg viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <rect x="1" y="4" width="22" height="16" rx="2" ry="2" />
                                    <line x1="1" y1="10" x2="23" y2="10" />
                                </svg>
                                <h5>No payments yet</h5>
                                <p>Add the first payment to get started.</p>
                            </div>
                        }
                    </div>

                    <!-- Add Payment Tab -->
                    @if (Model.RemainingBalance > 0)
                    {
                        <div class="tab-pane fade"
                             id="add-@Model.OrderRecordsId"
                             role="tabpanel">
                            <div class="add-payment-form">
                                <form asp-action="AddPayment" method="post" enctype="multipart/form-data" id="paymentForm-@Model.OrderRecordsId">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="OrderRecordsId" value="@Model.OrderRecordsId" />

                                    <div class="row g-3 mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">
                                                Payment Amount <span class="text-danger">*</span>
                                            </label>
                                            <input type="number"
                                                   name="Amount"
                                                   class="form-control"
                                                   step="0.01"
                                                   min="0.01"
                                                   max="@Model.RemainingBalance"
                                                   placeholder="Enter amount"
                                                   required
                                                   style="padding: 0.75rem;" />
                                            <small class="text-muted">Maximum: ₱@Model.RemainingBalance.ToString("N2")</small>
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">
                                                Payment Type <span class="text-danger">*</span>
                                            </label>
                                            <select name="PaymentStatus" class="form-select" required style="padding: 0.75rem;">
                                                <option value="">Select type</option>
                                                <option value="Down Payment">Down Payment</option>
                                                <option value="Full Payment">Full Payment</option>
                                            </select>
                                        </div>
                                    </div>

                                    <div class="row g-3 mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">Payment Proof 1</label>
                                            <div class="file-upload-box" onclick="document.getElementById('proof1-@Model.OrderRecordsId').click()">
                                                <svg class="file-upload-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                                                    <polyline points="17 8 12 3 7 8" />
                                                    <line x1="12" y1="3" x2="12" y2="15" />
                                                </svg>
                                                <div>Click to upload</div>
                                                <small class="text-muted">PNG, JPG up to 10MB</small>
                                                <div class="file-name-display" id="fileName1-@Model.OrderRecordsId"></div>
                                            </div>
                                            <input type="file"
                                                   name="ProofImage"
                                                   id="proof1-@Model.OrderRecordsId"
                                                   accept="image/*"
                                                   style="display: none;"
                                                   onchange="displayFileName(this, 1, @Model.OrderRecordsId)" />
                                        </div>

                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">Payment Proof 2 (Optional)</label>
                                            <div class="file-upload-box" onclick="document.getElementById('proof2-@Model.OrderRecordsId').click()">
                                                <svg class="file-upload-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                                    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4" />
                                                    <polyline points="17 8 12 3 7 8" />
                                                    <line x1="12" y1="3" x2="12" y2="15" />
                                                </svg>
                                                <div>Click to upload</div>
                                                <small class="text-muted">PNG, JPG up to 10MB</small>
                                                <div class="file-name-display" id="fileName2-@Model.OrderRecordsId"></div>
                                            </div>
                                            <input type="file"
                                                   name="ProofImage2"
                                                   id="proof2-@Model.OrderRecordsId"
                                                   accept="image/*"
                                                   style="display: none;"
                                                   onchange="displayFileName(this, 2, @Model.OrderRecordsId)" />
                                        </div>
                                    </div>

                                    <div class="d-grid gap-2">
                                        <button type="submit" class="btn btn-primary btn-lg" style="background: linear-gradient(135deg, #17a2b8 0%, #138496 100%); border: none;">
                                            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" style="vertical-align: middle; margin-right: 0.5rem;">
                                                <polyline points="20 6 9 17 4 12" />
                                            </svg>
                                            Add Payment
                                        </button>
                                    </div>
                                </form>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    function displayFileName(input, number, orderId) {
        const el = document.getElementById('fileName' + number + '-' + orderId);
        if (input.files && input.files[0]) {
            const file = input.files[0];

            // Validate size and type
            if (file.size > 10 * 1024 * 1024) {
                alert('File size must be less than 10MB');
                input.value = '';
                el.textContent = '';
                return;
            }

            const allowed = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif'];
            if (!allowed.includes(file.type)) {
                alert('Only image files (JPG, PNG, GIF) are allowed');
                input.value = '';
                el.textContent = '';
                return;
            }

            el.textContent = '📎 ' + file.name;
        } else {
            el.textContent = '';
        }
    }
</script>